version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@3.11
  slack: circleci/slack@4.3.1

parameters:
  alerts-slack-channel:
    type: string
    default: manage_a_workforce_dev

  java-version:
    type: string
    default: "16.0"
  postgres_tag:
    default: "11"
    type: string

executors:
  docker-env:
    docker:
      - image: cimg/openjdk:<< pipeline.parameters.java-version >>
        environment:
          _JAVA_OPTIONS: -Xmx256m -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2 -Dorg.gradle.daemon=false -Dkotlin.compiler.execution.strategy=in-process
      - image: postgres:<< pipeline.parameters.postgres_tag >>
        environment:
          - POSTGRES_PASSWORD=dev
          - POSTGRES_USER=root
      - image: localstack/localstack:0.12.15
        environment:
          - SERVICES=sns,sqs
          - DEBUG=${DEBUG- }
          - DATA_DIR=/tmp/localstack/data
          - DOCKER_HOST=unix:///var/run/docker.sock
          - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR- }
          - AWS_EXECUTION_ENV=True
          - DEFAULT_REGION=eu-west-2
          - TMPDIR=/private
    working_directory: ~/app


jobs:
  validate:
    executor: docker-env
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}
            - gradle-
      - run:
          name: Wait for s3 to be ready
          command: curl -4 --connect-timeout 30 --retry-connrefused --retry 20 --retry-delay 5 http://localhost:4566
      - run:
          command: ./gradlew -Dorg.gradle.jvmargs="--illegal-access=permit" -Dkotlin.daemon.jvm.options="--illegal-access=permit" check
      - slack/notify:
          event: fail
          channel: << pipeline.parameters.alerts-slack-channel >>
          template: basic_fail_1
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - validate:
          filters:
            tags:
              ignore: /.*/
          context: hmpps-common-vars
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_dev
          env: "dev"
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - validate
            - build_docker
            - helm_lint
      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
      - hmpps/deploy_env:
          name: deploy_preprod
          env: "preprod"
          context:
            - hmpps-common-vars
            - hmpps-workload-preprod
          requires:
            - request-preprod-approval
      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: "prod"
          context:
            - hmpps-common-vars
            - hmpps-workload-prod
          requires:
            - request-prod-approval

  build-deploy-migration:
    jobs:
      - hmpps/build_docker:
          name: build_migration_docker
          image_name: "quay.io/hmpps/wmt-migration"
          dockerfile_dir: "migration/."
          filters:
            branches:
              only:
                - main
      - hmpps/deploy_env:
          name: deploy_migration_preprod
          helm_dir: helm_deploy_cron
          chart_name: wmt-migration
          release_name: wmt-migration
          k8s_deployment_name: wmt-migration
          filters:
            branches:
              only:
                - main
          env: "preprod"
          requires:
            - build_migration_docker
          context:
            - hmpps-common-vars
            - hmpps-workload-preprod
      - request-migration-prod-approval:
          type: approval
          requires:
            - deploy_migration_preprod
      - hmpps/deploy_env:
          name: deploy_migration_prod
          helm_dir: helm_deploy_cron
          chart_name: wmt-migration
          release_name: wmt-migration
          k8s_deployment_name: wmt-migration
          filters:
            branches:
              only:
                - main
          env: "prod"
          requires:
            - request-migration-prod-approval
          context:
            - hmpps-common-vars
            - hmpps-workload-prod

  security:
    triggers:
      - schedule:
          cron: "14 5 * * 1-5"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/gradle_owasp_dependency_check:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
            - veracode-credentials
  security-weekly:
    triggers:
      - schedule:
          cron: "32 5 * * 1"
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars


